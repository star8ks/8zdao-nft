{
  "address": "0xb94fb1122B86d64C034992fD3E6ACBf4472D335D",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "renderer_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mint",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renderer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "renderer_",
          "type": "address"
        }
      ],
      "name": "setRenderer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "withdrawERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xad5bb74439df07371f4c706c59b8f0332e4c3afdd16c552c4007e690b8404798",
  "receipt": {
    "to": null,
    "from": "0xb911edC355C8B88CAD7B28bDa54F7649376B8612",
    "contractAddress": "0xb94fb1122B86d64C034992fD3E6ACBf4472D335D",
    "transactionIndex": 4,
    "gasUsed": "2161319",
    "logsBloom": "0x
    "blockHash": "0xf626630d2acee7c77b131515efd61a31eced579dd5978ce82409d5d1cfcd14b0",
    "transactionHash": "0xad5bb74439df07371f4c706c59b8f0332e4c3afdd16c552c4007e690b8404798",
    "logs": [
      {
        "transactionIndex": 4,
        "blockNumber": 10798751,
        "transactionHash": "0xad5bb74439df07371f4c706c59b8f0332e4c3afdd16c552c4007e690b8404798",
        "address": "0xb94fb1122B86d64C034992fD3E6ACBf4472D335D",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000b911edc355c8b88cad7b28bda54f7649376b8612"
        ],
        "data": "0x",
        "logIndex": 9,
        "blockHash": "0xf626630d2acee7c77b131515efd61a31eced579dd5978ce82409d5d1cfcd14b0"
      }
    ],
    "blockNumber": 10798751,
    "cumulativeGasUsed": "4500461",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xe9294C9f1F29d1D8B4AbF077cb1795de5a838Ccb"
  ],
  "numDeployments": 1,
  "solcInputHash": "4c5d1b59b41028a837acba24f29a326b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"renderer_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renderer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"renderer_\",\"type\":\"address\"}],\"name\":\"setRenderer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"withdrawERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/NFT8ZDAO.sol\":\"NFT8ZDAO\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"src/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Modern, minimalist, and gas efficient ERC-721 implementation.\\n/// @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC721.sol)\\nabstract contract ERC721 {\\n    /*//////////////////////////////////////////////////////////////\\n                                 EVENTS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    event Transfer(address indexed from, address indexed to, uint256 indexed id);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 indexed id);\\n\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /*//////////////////////////////////////////////////////////////\\n                         METADATA STORAGE/LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    string public name;\\n\\n    string public symbol;\\n\\n    function tokenURI(uint256 id) public view virtual returns (string memory);\\n\\n    /*//////////////////////////////////////////////////////////////\\n                      ERC721 BALANCE/OWNER STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    mapping(uint256 => address) internal _ownerOf;\\n\\n    mapping(address => uint256) internal _balanceOf;\\n\\n    function ownerOf(uint256 id) public view virtual returns (address owner) {\\n        require((owner = _ownerOf[id]) != address(0), \\\"NOT_MINTED\\\");\\n    }\\n\\n    function balanceOf(address owner) public view virtual returns (uint256) {\\n        require(owner != address(0), \\\"ZERO_ADDRESS\\\");\\n\\n        return _balanceOf[owner];\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                         ERC721 APPROVAL STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    mapping(uint256 => address) public getApproved;\\n\\n    mapping(address => mapping(address => bool)) public isApprovedForAll;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                               CONSTRUCTOR\\n    //////////////////////////////////////////////////////////////*/\\n\\n    constructor(string memory _name, string memory _symbol) {\\n        name = _name;\\n        symbol = _symbol;\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                              ERC721 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function approve(address spender, uint256 id) public virtual {\\n        address owner = _ownerOf[id];\\n\\n        require(msg.sender == owner || isApprovedForAll[owner][msg.sender], \\\"NOT_AUTHORIZED\\\");\\n\\n        getApproved[id] = spender;\\n\\n        emit Approval(owner, spender, id);\\n    }\\n\\n    function setApprovalForAll(address operator, bool approved) public virtual {\\n        isApprovedForAll[msg.sender][operator] = approved;\\n\\n        emit ApprovalForAll(msg.sender, operator, approved);\\n    }\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 id\\n    ) public virtual {\\n        require(from == _ownerOf[id], \\\"WRONG_FROM\\\");\\n\\n        require(to != address(0), \\\"INVALID_RECIPIENT\\\");\\n\\n        require(\\n            msg.sender == from || isApprovedForAll[from][msg.sender] || msg.sender == getApproved[id],\\n            \\\"NOT_AUTHORIZED\\\"\\n        );\\n\\n        // Underflow of the sender's balance is impossible because we check for\\n        // ownership above and the recipient's balance can't realistically overflow.\\n        unchecked {\\n            _balanceOf[from]--;\\n\\n            _balanceOf[to]++;\\n        }\\n\\n        _ownerOf[id] = to;\\n\\n        delete getApproved[id];\\n\\n        emit Transfer(from, to, id);\\n    }\\n\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id\\n    ) public virtual {\\n        transferFrom(from, to, id);\\n\\n        require(\\n            to.code.length == 0 ||\\n                ERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, \\\"\\\") ==\\n                ERC721TokenReceiver.onERC721Received.selector,\\n            \\\"UNSAFE_RECIPIENT\\\"\\n        );\\n    }\\n\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        bytes calldata data\\n    ) public virtual {\\n        transferFrom(from, to, id);\\n\\n        require(\\n            to.code.length == 0 ||\\n                ERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, data) ==\\n                ERC721TokenReceiver.onERC721Received.selector,\\n            \\\"UNSAFE_RECIPIENT\\\"\\n        );\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                              ERC165 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return\\n            interfaceId == 0x01ffc9a7 || // ERC165 Interface ID for ERC165\\n            interfaceId == 0x80ac58cd || // ERC165 Interface ID for ERC721\\n            interfaceId == 0x5b5e139f; // ERC165 Interface ID for ERC721Metadata\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                        INTERNAL MINT/BURN LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function _mint(address to, uint256 id) internal virtual {\\n        require(to != address(0), \\\"INVALID_RECIPIENT\\\");\\n\\n        require(_ownerOf[id] == address(0), \\\"ALREADY_MINTED\\\");\\n\\n        // Counter overflow is incredibly unrealistic.\\n        unchecked {\\n            _balanceOf[to]++;\\n        }\\n\\n        _ownerOf[id] = to;\\n\\n        emit Transfer(address(0), to, id);\\n    }\\n\\n    function _burn(uint256 id) internal virtual {\\n        address owner = _ownerOf[id];\\n\\n        require(owner != address(0), \\\"NOT_MINTED\\\");\\n\\n        // Ownership check above ensures no underflow.\\n        unchecked {\\n            _balanceOf[owner]--;\\n        }\\n\\n        delete _ownerOf[id];\\n\\n        delete getApproved[id];\\n\\n        emit Transfer(owner, address(0), id);\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                        INTERNAL SAFE MINT LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function _safeMint(address to, uint256 id) internal virtual {\\n        _mint(to, id);\\n\\n        require(\\n            to.code.length == 0 ||\\n                ERC721TokenReceiver(to).onERC721Received(msg.sender, address(0), id, \\\"\\\") ==\\n                ERC721TokenReceiver.onERC721Received.selector,\\n            \\\"UNSAFE_RECIPIENT\\\"\\n        );\\n    }\\n\\n    function _safeMint(\\n        address to,\\n        uint256 id,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, id);\\n\\n        require(\\n            to.code.length == 0 ||\\n                ERC721TokenReceiver(to).onERC721Received(msg.sender, address(0), id, data) ==\\n                ERC721TokenReceiver.onERC721Received.selector,\\n            \\\"UNSAFE_RECIPIENT\\\"\\n        );\\n    }\\n}\\n\\n/// @notice A generic interface for a contract which properly accepts ERC721 tokens.\\n/// @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC721.sol)\\nabstract contract ERC721TokenReceiver {\\n    function onERC721Received(\\n        address,\\n        address,\\n        uint256,\\n        bytes calldata\\n    ) external virtual returns (bytes4) {\\n        return ERC721TokenReceiver.onERC721Received.selector;\\n    }\\n}\\n\",\"keccak256\":\"0xb59c7c25eca386f39da4819a9f70f89b73b7583d5f5127a83ffe5339800b1183\",\"license\":\"AGPL-3.0-only\"},\"src/NFT8ZDAO.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.11;\\n\\nimport \\\"./ERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract NFT8ZDAO is ERC721, Ownable {\\n    address public renderer;\\n    uint256 public totalSupply;\\n\\n    string[] private TIAN_GAN = [\\n        unicode\\\"\\u7532\\\",\\n        unicode\\\"\\u4e59\\\",\\n        unicode\\\"\\u4e19\\\",\\n        unicode\\\"\\u4e01\\\",\\n        unicode\\\"\\u620a\\\",\\n        unicode\\\"\\u5df1\\\",\\n        unicode\\\"\\u5e9a\\\",\\n        unicode\\\"\\u8f9b\\\",\\n        unicode\\\"\\u58ec\\\",\\n        unicode\\\"\\u7678\\\"\\n    ];\\n\\n    string[] private DI_ZHI = [\\n        unicode\\\"\\u5bc5\\\",\\n        unicode\\\"\\u536f\\\",\\n        unicode\\\"\\u8fb0\\\",\\n        unicode\\\"\\u5df3\\\",\\n        unicode\\\"\\u5348\\\",\\n        unicode\\\"\\u672a\\\",\\n        unicode\\\"\\u7533\\\",\\n        unicode\\\"\\u9149\\\",\\n        unicode\\\"\\u620c\\\",\\n        unicode\\\"\\u4ea5\\\",\\n        unicode\\\"\\u5b50\\\",\\n        unicode\\\"\\u4e11\\\"\\n    ];\\n\\n    constructor(address renderer_) ERC721(\\\"8Z DAO\\\", \\\"8ZDAO\\\") {\\n        renderer = renderer_;\\n    }\\n\\n    function setRenderer(address renderer_) external onlyOwner {\\n        renderer = renderer_;\\n    }\\n\\n    function mint() public payable {\\n        require(totalSupply < 70, \\\"Only 70 8ZDAO NFT\\\");\\n        require(msg.value == 0.1 ether, \\\"Incorrect ether value\\\");\\n        _safeMint(msg.sender, ++totalSupply);\\n    }\\n\\n    function tokenURI(uint256 tokenId) public view override returns (string memory) {\\n        require(_ownerOf[tokenId] != address(0), \\\"ERC721Metadata: URI query for nonexistent token\\\");\\n        string[] memory words;\\n        string memory name;\\n        if (tokenId <= 10) {\\n            words = new string[](1);\\n            words[0] = TIAN_GAN[(tokenId - 1) % 10];\\n            name = words[0];\\n        } else {\\n            words = new string[](2);\\n            words[0] = TIAN_GAN[(tokenId - 11) % 10];\\n            words[1] = DI_ZHI[((tokenId - 11) + 10) % 12];\\n            name = string(abi.encodePacked(words[0], words[1]));\\n        }\\n        return IRenderer(renderer).renderStrings(tokenId, name, words);\\n    }\\n\\n    function withdraw() external onlyOwner {\\n        uint256 balance = address(this).balance;\\n        payable(msg.sender).transfer(balance);\\n    }\\n\\n    function withdrawERC20(IERC20 token) external onlyOwner {\\n        uint256 balance = token.balanceOf(address(this));\\n        token.transfer(msg.sender, balance);\\n    }\\n}\\n\\ninterface IRenderer {\\n    function renderStrings(uint256, string memory, string[] memory) external view returns (string memory);\\n}\\n\\nabstract contract IERC20 {\\n    mapping(address => uint256) public balanceOf;\\n    function transfer(address to, uint256 amount) public virtual returns (bool);\\n}\\n\",\"keccak256\":\"0xea9c0036616eb701da14a79edd6b007328b10fb56feb23ae33b166554227ac85\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60036101c08181526273ca5960e91b6101e052608090815261020082815262e4b99960e81b6102205260a05261024082815262e4b89960e81b6102605260c05261028082815262e4b88160e81b6102a05260e0526102c08281526273444560e91b6102e0526101005261030082815262e5b7b160e81b61032052610120526103408281526272dd4d60e91b610360526101405261038082815262e8be9b60e81b6103a052610160526103c0828152623968eb60ea1b6103e05261018052610440604052610400918252621cf33760eb1b610420526101a091909152620000ea90600990600a62000376565b50604080516101c0810182526003610180820181815262e5af8560e81b6101a084015282528251808401845281815262e58daf60e81b6020828101919091528084019190915283518085018552828152620e8beb60ec1b81830152838501528351808501855282815262e5b7b360e81b81830152606084015283518085018552828152621cb1b160eb1b8183015260808401528351808501855282815262734e5560e91b8183015260a08401528351808501855282815262e794b360e81b8183015260c08401528351808501855282815262e9858960e81b8183015260e0840152835180850185528281526239a22360ea1b818301526101008401528351808501855282815262e4baa560e81b8183015261012084015283518085018552828152620e5ad960ec1b81830152610140840152835180850190945290835262e4b89160e81b908301526101608101919091526200024b90600a90600c620003da565b503480156200025957600080fd5b5060405162001ff438038062001ff48339810160408190526200027c9162000531565b6040805180820182526006815265385a2044414f60d01b602080830191825283518085019094526005845264385a44414f60d81b908401528151919291620002c7916000916200042c565b508051620002dd9060019060208401906200042c565b505050620002fa620002f46200032060201b60201c565b62000324565b600780546001600160a01b0319166001600160a01b0392909216919091179055620005a0565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054828255906000526020600020908101928215620003c8579160200282015b82811115620003c85782518051620003b79184916020909101906200042c565b509160200191906001019062000397565b50620003d6929150620004b7565b5090565b828054828255906000526020600020908101928215620003c8579160200282015b82811115620003c857825180516200041b9184916020909101906200042c565b5091602001919060010190620003fb565b8280546200043a9062000563565b90600052602060002090601f0160209004810192826200045e5760008555620004a9565b82601f106200047957805160ff1916838001178555620004a9565b82800160010185558215620004a9579182015b82811115620004a95782518255916020019190600101906200048c565b50620003d6929150620004d8565b80821115620003d6576000620004ce8282620004ef565b50600101620004b7565b5b80821115620003d65760008155600101620004d9565b508054620004fd9062000563565b6000825580601f106200050e575050565b601f0160209004906000526020600020908101906200052e9190620004d8565b50565b6000602082840312156200054457600080fd5b81516001600160a01b03811681146200055c57600080fd5b9392505050565b600181811c908216806200057857607f821691505b602082108114156200059a57634e487b7160e01b600052602260045260246000fd5b50919050565b611a4480620005b06000396000f3fe6080604052600436106101355760003560e01c806370a08231116100ab578063a22cb4651161006f578063a22cb4651461034a578063b88d4fde1461036a578063c87b56dd1461038a578063e985e9c5146103aa578063f2fde38b146103e5578063f4f3b2001461040557600080fd5b806370a08231146102c2578063715018a6146102e25780638ada6b0f146102f75780638da5cb5b1461031757806395d89b411461033557600080fd5b806318160ddd116100fd57806318160ddd1461020957806323b872dd1461022d5780633ccfd60b1461024d57806342842e0e1461026257806356d3163d146102825780636352211e146102a257600080fd5b806301ffc9a71461013a57806306fdde031461016f578063081812fc14610191578063095ea7b3146101df5780631249c58b14610201575b600080fd5b34801561014657600080fd5b5061015a61015536600461146c565b610425565b60405190151581526020015b60405180910390f35b34801561017b57600080fd5b50610184610477565b60405161016691906114ec565b34801561019d57600080fd5b506101c76101ac3660046114ff565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610166565b3480156101eb57600080fd5b506101ff6101fa36600461152d565b610505565b005b6101ff6105ec565b34801561021557600080fd5b5061021f60085481565b604051908152602001610166565b34801561023957600080fd5b506101ff610248366004611559565b6106a0565b34801561025957600080fd5b506101ff610867565b34801561026e57600080fd5b506101ff61027d366004611559565b6108c4565b34801561028e57600080fd5b506101ff61029d36600461159a565b610999565b3480156102ae57600080fd5b506101c76102bd3660046114ff565b6109e5565b3480156102ce57600080fd5b5061021f6102dd36600461159a565b610a3c565b3480156102ee57600080fd5b506101ff610a9f565b34801561030357600080fd5b506007546101c7906001600160a01b031681565b34801561032357600080fd5b506006546001600160a01b03166101c7565b34801561034157600080fd5b50610184610ad3565b34801561035657600080fd5b506101ff6103653660046115c5565b610ae0565b34801561037657600080fd5b506101ff6103853660046115fe565b610b4c565b34801561039657600080fd5b506101846103a53660046114ff565b610c11565b3480156103b657600080fd5b5061015a6103c536600461169d565b600560209081526000928352604080842090915290825290205460ff1681565b3480156103f157600080fd5b506101ff61040036600461159a565b611089565b34801561041157600080fd5b506101ff61042036600461159a565b611124565b60006301ffc9a760e01b6001600160e01b03198316148061045657506380ac58cd60e01b6001600160e01b03198316145b806104715750635b5e139f60e01b6001600160e01b03198316145b92915050565b60008054610484906116cb565b80601f01602080910402602001604051908101604052809291908181526020018280546104b0906116cb565b80156104fd5780601f106104d2576101008083540402835291602001916104fd565b820191906000526020600020905b8154815290600101906020018083116104e057829003601f168201915b505050505081565b6000818152600260205260409020546001600160a01b03163381148061054e57506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b6105905760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064015b60405180910390fd5b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6046600854106106325760405162461bcd60e51b815260206004820152601160248201527013db9b1e480dcc080e16911053c8139195607a1b6044820152606401610587565b3467016345785d8a0000146106815760405162461bcd60e51b8152602060048201526015602482015274496e636f72726563742065746865722076616c756560581b6044820152606401610587565b61069e336008600081546106949061171c565b918290555061122d565b565b6000818152600260205260409020546001600160a01b038481169116146106f65760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b6044820152606401610587565b6001600160a01b0382166107405760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610587565b336001600160a01b038416148061077a57506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b8061079b57506000818152600460205260409020546001600160a01b031633145b6107d85760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606401610587565b6001600160a01b0380841660008181526003602090815260408083208054600019019055938616808352848320805460010190558583526002825284832080546001600160a01b03199081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6006546001600160a01b031633146108915760405162461bcd60e51b815260040161058790611737565b6040514790339082156108fc029083906000818181858888f193505050501580156108c0573d6000803e3d6000fd5b5050565b6108cf8383836106a0565b6001600160a01b0382163b15806109785750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af1158015610948573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096c919061176c565b6001600160e01b031916145b6109945760405162461bcd60e51b815260040161058790611789565b505050565b6006546001600160a01b031633146109c35760405162461bcd60e51b815260040161058790611737565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b6000818152600260205260409020546001600160a01b031680610a375760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b6044820152606401610587565b919050565b60006001600160a01b038216610a835760405162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b6044820152606401610587565b506001600160a01b031660009081526003602052604090205490565b6006546001600160a01b03163314610ac95760405162461bcd60e51b815260040161058790611737565b61069e60006112f9565b60018054610484906116cb565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610b578585856106a0565b6001600160a01b0384163b1580610bee5750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a0290610b9f9033908a908990899089906004016117b3565b6020604051808303816000875af1158015610bbe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be2919061176c565b6001600160e01b031916145b610c0a5760405162461bcd60e51b815260040161058790611789565b5050505050565b6000818152600260205260409020546060906001600160a01b0316610c905760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610587565b606080600a8411610dc35760408051600180825281830190925290816020015b6060815260200190600190039081610cb05790505091506009600a610cd660018761181d565b610ce09190611834565b81548110610cf057610cf0611856565b906000526020600020018054610d05906116cb565b80601f0160208091040260200160405190810160405280929190818152602001828054610d31906116cb565b8015610d7e5780601f10610d5357610100808354040283529160200191610d7e565b820191906000526020600020905b815481529060010190602001808311610d6157829003601f168201915b505050505082600081518110610d9657610d96611856565b602002602001018190525081600081518110610db457610db4611856565b60200260200101519050611008565b6040805160028082526060820190925290816020015b6060815260200190600190039081610dd95790505091506009600a610dff600b8761181d565b610e099190611834565b81548110610e1957610e19611856565b906000526020600020018054610e2e906116cb565b80601f0160208091040260200160405190810160405280929190818152602001828054610e5a906116cb565b8015610ea75780601f10610e7c57610100808354040283529160200191610ea7565b820191906000526020600020905b815481529060010190602001808311610e8a57829003601f168201915b505050505082600081518110610ebf57610ebf611856565b6020908102919091010152600a600c610ed9600b8761181d565b610ee490600a61186c565b610eee9190611834565b81548110610efe57610efe611856565b906000526020600020018054610f13906116cb565b80601f0160208091040260200160405190810160405280929190818152602001828054610f3f906116cb565b8015610f8c5780601f10610f6157610100808354040283529160200191610f8c565b820191906000526020600020905b815481529060010190602001808311610f6f57829003601f168201915b505050505082600181518110610fa457610fa4611856565b602002602001018190525081600081518110610fc257610fc2611856565b602002602001015182600181518110610fdd57610fdd611856565b6020026020010151604051602001610ff6929190611884565b60405160208183030381529060405290505b6007546040516320adb93560e21b81526001600160a01b03909116906382b6e4d49061103c908790859087906004016118b3565b600060405180830381865afa158015611059573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611081919081019061192b565b949350505050565b6006546001600160a01b031633146110b35760405162461bcd60e51b815260040161058790611737565b6001600160a01b0381166111185760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610587565b611121816112f9565b50565b6006546001600160a01b0316331461114e5760405162461bcd60e51b815260040161058790611737565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015611195573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111b991906119d8565b60405163a9059cbb60e01b8152336004820152602481018290529091506001600160a01b0383169063a9059cbb906044016020604051808303816000875af1158015611209573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099491906119f1565b611237828261134b565b6001600160a01b0382163b15806112dd5750604051630a85bd0160e11b80825233600483015260006024830181905260448301849052608060648401526084830152906001600160a01b0384169063150b7a029060a4016020604051808303816000875af11580156112ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112d1919061176c565b6001600160e01b031916145b6108c05760405162461bcd60e51b815260040161058790611789565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166113955760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610587565b6000818152600260205260409020546001600160a01b0316156113eb5760405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b6044820152606401610587565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b03198116811461112157600080fd5b60006020828403121561147e57600080fd5b813561148981611456565b9392505050565b60005b838110156114ab578181015183820152602001611493565b838111156114ba576000848401525b50505050565b600081518084526114d8816020860160208601611490565b601f01601f19169290920160200192915050565b60208152600061148960208301846114c0565b60006020828403121561151157600080fd5b5035919050565b6001600160a01b038116811461112157600080fd5b6000806040838503121561154057600080fd5b823561154b81611518565b946020939093013593505050565b60008060006060848603121561156e57600080fd5b833561157981611518565b9250602084013561158981611518565b929592945050506040919091013590565b6000602082840312156115ac57600080fd5b813561148981611518565b801515811461112157600080fd5b600080604083850312156115d857600080fd5b82356115e381611518565b915060208301356115f3816115b7565b809150509250929050565b60008060008060006080868803121561161657600080fd5b853561162181611518565b9450602086013561163181611518565b935060408601359250606086013567ffffffffffffffff8082111561165557600080fd5b818801915088601f83011261166957600080fd5b81358181111561167857600080fd5b89602082850101111561168a57600080fd5b9699959850939650602001949392505050565b600080604083850312156116b057600080fd5b82356116bb81611518565b915060208301356115f381611518565b600181811c908216806116df57607f821691505b6020821081141561170057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600060001982141561173057611730611706565b5060010190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561177e57600080fd5b815161148981611456565b60208082526010908201526f155394d0519157d49150d2541251539560821b604082015260600190565b6001600160a01b038681168252851660208201526040810184905260806060820181905281018290526000828460a0840137600060a0848401015260a0601f19601f85011683010190509695505050505050565b634e487b7160e01b600052604160045260246000fd5b60008282101561182f5761182f611706565b500390565b60008261185157634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052603260045260246000fd5b6000821982111561187f5761187f611706565b500190565b60008351611896818460208801611490565b8351908301906118aa818360208801611490565b01949350505050565b838152600060206060818401526118cd60608401866114c0565b8381036040850152845180825282820190600581901b8301840184880160005b8381101561191b57601f198684030185526119098383516114c0565b948701949250908601906001016118ed565b50909a9950505050505050505050565b60006020828403121561193d57600080fd5b815167ffffffffffffffff8082111561195557600080fd5b818401915084601f83011261196957600080fd5b81518181111561197b5761197b611807565b604051601f8201601f19908116603f011681019083821181831017156119a3576119a3611807565b816040528281528760208487010111156119bc57600080fd5b6119cd836020830160208801611490565b979650505050505050565b6000602082840312156119ea57600080fd5b5051919050565b600060208284031215611a0357600080fd5b8151611489816115b756fea2646970667358221220d98818851ac824194c861ea1791e8b8f2afb69354a0a5cd1dc00776cc2e3671464736f6c634300080b0033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 155,
        "contract": "src/NFT8ZDAO.sol:NFT8ZDAO",
        "label": "name",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 157,
        "contract": "src/NFT8ZDAO.sol:NFT8ZDAO",
        "label": "symbol",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 168,
        "contract": "src/NFT8ZDAO.sol:NFT8ZDAO",
        "label": "_ownerOf",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 172,
        "contract": "src/NFT8ZDAO.sol:NFT8ZDAO",
        "label": "_balanceOf",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 221,
        "contract": "src/NFT8ZDAO.sol:NFT8ZDAO",
        "label": "getApproved",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 227,
        "contract": "src/NFT8ZDAO.sol:NFT8ZDAO",
        "label": "isApprovedForAll",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 7,
        "contract": "src/NFT8ZDAO.sol:NFT8ZDAO",
        "label": "_owner",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      },
      {
        "astId": 700,
        "contract": "src/NFT8ZDAO.sol:NFT8ZDAO",
        "label": "renderer",
        "offset": 0,
        "slot": "7",
        "type": "t_address"
      },
      {
        "astId": 702,
        "contract": "src/NFT8ZDAO.sol:NFT8ZDAO",
        "label": "totalSupply",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 716,
        "contract": "src/NFT8ZDAO.sol:NFT8ZDAO",
        "label": "TIAN_GAN",
        "offset": 0,
        "slot": "9",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 732,
        "contract": "src/NFT8ZDAO.sol:NFT8ZDAO",
        "label": "DI_ZHI",
        "offset": 0,
        "slot": "10",
        "type": "t_array(t_string_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}